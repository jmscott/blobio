#!/bin/bash
#
#  Synopsis:
#	Push rrd samples into the table blobio.bio4d_request_stat
#  Note:
#	Race condition exists between the time the log file is renamed
#	and the insert into the database.  A slightly safer algorithm
#	would be to sha the frozen log file before and after the put to the db.
#
#		FROZEN=bio4d-rrd-<timestamp>.log
#		mv bio4d-rrd.log $FROZEN
#		sleep FLUSH_PAUSE
#		SHA1=$(blobio eat $FROZEN)
#		psql <bio4d-rrd-<timestamp>.log
#		SHA2=$(blobio eat $FROZEN)
#		test $SHA1 = $SHA2 || die
#

RRD=log/bio4d-rrd.log
FLUSH_PAUSE=${BLOBIO_RRD_FLUSH_PAUSE:=5}
MERGE_SQL=lib/merge-bio4d_request_stat.sql
PSQL='psql --no-psqlrc'

log()
{
	echo "$(date +'%Y/%m/%d %H:%M:%S'): #$$: $@"
}

die()
{
	log "ERROR: $@" >&2
	exit 1
}

leave()
{
	log 'good bye, cruel world'
}

log hello, world
trap leave EXIT INT QUIT TERM

#  insure environment BLOBIO environment variables are defined

test -n "$BLOBIO_ROOT" || die 'BLOBIO_ROOT environment variable not defined'
log "BLOBIO_ROOT=$BLOBIO_ROOT"
cd $BLOBIO_ROOT || die "cd $BLOBIO_ROOT failed"

test -e etc/profile || die "missing expected profile: $(pwd)/etc/profile"
. etc/profile

test -n "$BLOBIO_SERVICE" ||
			die 'BLOBIO_SERVICE environment variable not defined'
log "BLOBIO_SERVICE=$BLOBIO_SERVICE"

test -n "$BLOBIO_ALGORITHM" ||
			die 'BLOBIO_ALGORITHM environment variable not defined'
log "BLOBIO_ALGORITHM=$BLOBIO_ALGORITHM"

log "PGHOST=$PGHOST"
log "PGPORT=$PGPORT"
log "PGUSER=$PGUSER"
log "PGPASSWORD=$PGPASSWORD"
log "PGDATABASE=$PGDATABASE"

if [ ! -e $RRD ];  then
	log "WARN: file does not exist: $RRD"
	exit 1
fi
if [ ! -s $RRD ];  then
	log "WARN: file is empty: $RDD"
	exit 2
fi

#  move the sample file to a frozen version

NOW=$(date +'%Y%m%d_%H%M%S')
RRD_FROZEN=$(echo $RRD | sed "s/\.log$/-$NOW.log/")
log "frozen sample file: $RRD_FROZEN"
mv $RRD $RRD_FROZEN || die "mv $RRD $RRD_FROZEN failed"

log "flush pause $FLUSH_PAUSE sec ..."
sleep $FLUSH_PAUSE

log "merging new samples with sql $MERGE_SQL"
$PSQL --file $MERGE_SQL <$RRD_FROZEN || die "psql $MERGE_SQL failed: status=$?"

log "blobify frozen samples: $RRD_FROZEN"
bio-put-file $RRD_FROZEN || die "bio-put-file $RRD_FROZEN failed: status=$?"
bio-give $RRD_FROZEN || die "bio-give $RRD_FROZEN failed: status=$?"
