#!/usr/bin/env perl
#
#  Synopsis:
#	Convert flow descrip records to round-robin database minute samples
#  Usage:
#	fdr2rrd-minute <path/to/flowd-fdr >>path/to/rrd-sample
#	fdr2rrd-minute <log/flowd-1629235532.fdr >spool/flowd-1629235532.rrd
#  Exit Status:
#	0	no error
#	1	unexpected error
#  Note:
#	Is this script obsolete?
#
use Date::Parse;

my %BLOB;
my $fdr_count;

my $blob_count = 0;

my $fdr_re = qr{
	#  start time of request: YYYY-MM-DDThh:mm:ss.ns[+-]HH:MM
	(2\d\d\d-				#  year
		(?:(?:0[0-9])|10|11|12)-	#  month
		(?:(?:[012][0-9])|30|31)T	#  day followed by T
		(?:[0-2]\d):			#  hour
		(?:[0-5]\d):			#  minute
		(?:[0-5]\d)\.			#  second
		(?:\d{1,9})			#  nanoseconds
		[+-]\d\d:\d\d			#  time zone offset
	)					\t

	#  udig of blob being processed
	([a-z][a-z0-9]{0,7}:[a-f0-9]{32,128})	\t

	#  ok count
	([0-9]{0,9})				\t

	#  fault count
	([0-9]{0,9})				\t

	#  wall duration in secs
	([0-9]{0,9}\.\d{0,9})			\t

	#  flow sequence number (unique)
	(\d{1,19})
}sx;

flush_rrd
{
	my $distinct_blob_count = scalar(%BLOB);

	print <<END;
$_[0]:$blob_count:$distinct_blob_count
END
	
	$blob_count = 0;
	undef %BLOB;
}

die 'wrong arguments count: got ' . @ARGV . ', expected 0'
	unless @ARGV == 0
;

my $active_minute;
while (<STDIN>) {
	chomp;
	die "unknown fdr record: $_" unless m/^${fdr_re}$/;
	my (
		$start_time,	#  RFC3339nan:YYYY-MM-DDThh:mm:ss.ns9[+-]ZZ:ZZ
		$blob,		#  udig of the blob
		$ok_count,	#  count of ok process exits <=2^63-1
		$fault_count,	#  count of process faults <=2^63-1
		$wall_duration,	#  wall clock duration seconds.nsec
		$log_sequence	#  unique log sequence
	) = ($1, $2, $3, $4, $5, $6);

	my $rrd_sample_min = $start_time;
	#  round all samples to minute
	$rrd_sample_min =~ s/:\d\d([+-])/:00$1/;

	if ($active_minute) {
		if ($active_minute ne $rrd_sample_min) {
			flush_rrd($active_minute);
			$active_minute = $rrd_sample_min;
		}
	} else {
		$active_minute = $rrd_sample_min;
	}
		
	my $start_epoch = str2time($start_time);
	my $end_epoch = $start_epoch + $wall_duration;

	if ($BLOB{$blob}) {
		$BLOB{$blob}++;
	} else {
		$BLOB{$blob} = 1;
	}
	$fdr_count++;
}
