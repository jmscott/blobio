#
#  Synopsis:
#	Start flowd process from MAC OS launchd, consulting run/flowd.pid
#  Note:
#       Change explicit dependence on
#
#               etc/sync-<remote-tag>.flow
#
#       to
#               etc/<remote-tag>.flow
#
#	Merge launchd-flowd and systemd-flowd into boot-flowd.
#

PROG=$(basename $0)

unset PGSYSCONFDIR

log()
{
	echo "$(date +'%Y/%m/%d %H:%M:%S'): $PROG: $@"
}

die()
{
	log "ERROR: $@" >&2
	exit 1
}

test $# = 1 || die "wrong number of command arguments: got $#, expected 1"
FLOW_CONF=$1

log 'hello, world'
trap 'log good bye, cruel world' EXIT

log "BLOBIO_ROOT=$BLOBIO_ROOT"
log "PATH=$PATH"
log "flow conf: $FLOW_CONF"

#  Note: need flowd to be smarter about missing brr file!
touch spool/bio4d.brr || die "touch bio4d.brr failed: exit status=$?"

#
#  In theory, launchd is responsible for killing the kids, so we can
#  confidently clean out the run/flowd files.
#
#	<key>AbandonProcessGroup</key>
#	<false/>
#
#  However, we do not trust launchd, so simply kill a running flowd
#  and move on.
#
RUN_PID=run/flowd.pid
if [ -e $RUN_PID ];  then
	log "pid file exists: $RUN_PID"
	if [ -s $RUN_PID ];  then
		PID=$(head -1 $RUN_PID)
		log "killing possible flowd process: #$PID"
		kill $PID
	else
		log 'pid file is empty, so perhaps flowd crashed'
	fi
else
	log 'no run/flowd.pid (good)'
fi
rm -f run/flowd.* || die "rm run/flowd.* failed: exit status=$?"

test -r etc/profile || die "can not read $(pwd)/etc/profile"
. etc/profile
log 'execing flowd ...'
exec bin/flowd server $FLOW_CONF
