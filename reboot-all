#!/usr/bin/env bash
#
#  Synopsis:
#	Cron script to fully reboot all blob process @reboot cron schedule
#  Usage:
#	#  in crontab
#	BLOBIO_ROOT=/usr/local/blobio
#	LOG=$BLOBIO_ROOT/log/reboot-all.log
#
#	@reboot $BLOBIO_ROOTsbin/reboot-all >>$LOG 2>&1
#

PROG=$(basename $0)
FLOWD_PAUSE=8
PKILL_PAUSE=8

log()
{
	echo "$(date +'%Y/%m/%d %H:%M:%S'): $PROG#$$: $@"
}

die()
{
	log "ERROR: $@" >&2
	exit 1
}

leave()
{
	log 'good bye, cruel world'
}

test $# = 0 || die "wrong argument count: got $#, need 0"

log 'hello, world'
trap leave EXIT

test -n "$BLOBIO_ROOT" || die "environment variable not defined: BLOBIO_ROOT"
log "BLOBIO_ROOT=$BLOBIO_ROOT"

cd $BLOBIO_ROOT || die "cd $BLOBIO_ROOT failed"
log "current direction: $(pwd)"

. etc/profile

log 'calling bio4d_ctl restart bio4d ...'
log 'log messages may be out of order (ok)' 
bio4d_ctl restart || die "bio4d_ctl restart failed: exit status=$?"
log 'bio4d_ctl restart ok'

FLOW_PATH=$(find-etc-flow-path)
STATUS=$?
case $STATUS in
0)
	log "etc flow: $FLOW_PATH"
	;;
1)
	die 'missing etc flow file'
	;;
*)
	die "find-etc-flow-path failed: exit status=$STATUS"
	;;
esac

log 'starting flowd server in background ...'

flowd server $FLOW_PATH &
log "pausing $FLOWD_PAUSE sec while flowd starts ..."
sleep $FLOWD_PAUSE

#  Note: trust flowd to discern if an older flowd was running

test -e run/flowd.pid || die "flowd failed to start in background"
log "flowd pid: $(cat run/flowd.pid)"

reboot-sync-remote || die "reboot-sync-remote failed: exit status=$?"

exec run-stat-report
