#
#  Synopsis:
#	What services are running based on age of files run/*.pid
#  Usage:
#	run-stat
#  Note:
#	Probing process existence with pgrep might be useful.
#	Not clear if another script should do this.
#
STALE_AFTER=60

die()
{
	echo "$(basename $0): ERROR: $@" >&2
	exit 1
}

_stale_pid()
{
	WHAT=$1
	PID_PATH=$2
	UPTIME=UNKNOWN

	stale-mtime $STALE_AFTER $PID_PATH
	STATUS=$?
	case $STATUS in
	0)
		STATE=DOWN
		;;
	1)
		STATE=UP
		UPTIME=$(head -2 $PID_PATH | tail -1)
		;;
	2)
		STATE=DOWN
		;;
	*)
		die "stale-mtime failed: exit status=$?"
		;;
	esac
	echo "$WHAT	$STATE	$UPTIME"
}

test $# = 0 || die "wrong number cli arguments: got $#, expected 0"

test -n "$BLOBIO_ROOT" || die "environment not defined: BLOBIO_ROOT"
cd $BLOBIO_ROOT || die "cd $BLOBIO_FAILED: exit status=$?"

_stale_pid bio4d run/bio4d.pid
_stale_pid flowd run/flowd.pid

#  check sync flowd process
find sync/host -name run -type d | while read RUN_DIR;  do
	HOST=$(basename $(dirname $RUN_DIR))
	_stale_pid flowd/$HOST $RUN_DIR/flowd.pid 
done
