#!/bin/bash
#
#  Synopsis:
#	Calculate size of set of udigs read from stdin input.
# 
#	echo sha:07197d010a988984e1827645f09b6169cff62ae2 >x
#	echo btc20:dd049c347d7b936dda490efad963d1aee87b0b89 >>x
#
#	bio-sizeof-stdin <x
#	#  duplicate in set, generates error!
#	echo btc20:dd049c347d7b936dda490efad963d1aee87b0b89 >>x
#
#	bio-blob_size-stdin <x		#  generates sql error
#
#	sort -u x | bio-blob_size	#  correct
#
#  Exit Status
#	0	output byte count of entire set
#	1	error
#  Note:
#	The input set must be not contain duplicates.
#	Need to modify bio-blob_size.sql to eliminate dups.
#

PSQL='psql --no-psqlrc'
PROG=$(basename $0)

die()
{
	echo "$PROG: ERROR: $@" >&2
	echo "usage: $PROG [--help] <set.udig"
	exit 1
}

case "$1" in
help|--help|-h)
	cat <<END
Usage: bio-blob_size <rummy.udig

Output: Tab Separated Fields

	Field 1:	Approximate, Readable Total Byte Count
	Field 2:	Decimal Total Byte Count
	Field 3:	Count of Blobs with Known Size
	Field 4:	Count of Blobs with No Known Size
	Field 5:	Count Blobs not in Table blobio.service

Note:
	The size of a blob not in service is possible.
	The input set must contain no duplicates (which will change).
END
	exit 0
	;;
"")
	;;
*)
	die "unknown option: $1 (do $PROG --help)"
	;;
esac

test $# = 0 || die "wrong number of arguments: got $#, expected 0"
test -n "$BLOBIO_ROOT" || die 'env not defined: BLOBIO_ROOT'

$PSQL 									\
	--file $BLOBIO_ROOT/lib/$PROG.sql				\
	--field-separator="	"					\
	--quiet								\
	--no-align							\
	--pset=tuples_only=t						||
	die "psql failed: exit status=$?"
