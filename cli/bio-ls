#!/usr/bin/env bash
#
#  Synopsis:
#	Details about blobs in SQL blobio schema.
#  Usage:
#	bio-ls sha:c59f2c4f35b56a4bdf2d2c9f4a9984f2049cf2d4
#	bio-ls <blob-set.udig
#  Enviroment:
#	BLOBIO_PG{HOST, PORT, USER, PASSWORD, DATABASE}
#  Note:
#	Incorrect code when service table is empty.
#

export PGHOST=${BLOBIO_PGHOST:=${PGHOST:=/tmp}}
export PGPORT=${BLOBIO_PGPORT:=${PGPORT:=5432}}
export PGUSER=${BLOBIO_PGUSER:=${PGUSER:=postgres}}
export PGPASSWORD=${BLOBIO_PGPASSWORD:=${PRPASSWORD:=}}
export PGDATABASE=${BLOBIO_PGDATABASE:=${PGDATABASE:=blobio}}

die()
{
	echo "$(basename $0): ERROR: $@" >&1
	exit 1
}

_ls()
{
	psql --no-psqlrc --quiet <<END || die "psql detail failed: exit status=$?"
\\x on
\\pset tuples_only
\\pset null Unknown
\\set ON_ERROR_STOP 1

SELECT
	s.blob AS "Blob",
	c.system_identifier AS "PG System Id",
	regexp_replace(age(now(), s.discover_time)::text, '\..*', '') || ' ago'
		AS "Discovered",
	regexp_replace(age(now(), s.recent_verify_time)::text, '\..*', '') || ' ago'
		AS "Recent Verify",
	pg_size_pretty(bs.byte_count) ||
	CASE
	  WHEN pg_size_pretty(bs.byte_count) ~ ' bytes'
	  THEN
	  	''
	  ELSE
		' (' || bs.byte_count || ' bytes)'
	END
		AS "Size",
	s.discover_time AS "Discovered @",
	s.recent_verify_time AS "Verified @"
  FROM
  	blobio.service s
	  LEFT OUTER JOIN blobio.brr_blob_size bs ON (bs.blob = s.blob),
	pg_control_system() c
  WHERE
  	s.blob = '$1'
;
END
}

recent_udig()
{
	psql --no-psqlrc --quiet <<END || die "psql recent failed: exit status=$?"
\\pset tuples_only
\\set ON_ERROR_STOP 1

SELECT
	blob
  FROM
  	blobio.service
  WHERE
  	discover_time >= now() + '-24 hours'
  ORDER BY
  	discover_time DESC
  LIMIT
  	1
;
END
}

case $# in
0)
	RECENT_BLOB=$(recent_udig)
	if [ "$RECENT_BLOB" = '' ];  then
		echo 'no new blobs in previous 24 hours'
		exit 0;
	fi
	_ls $(recent_udig)
	;;
*)
	while [ $# -gt 0 ];  do
		_ls $1
		shift
	done
	;;
esac

exit 0
