#!/bin/bash
#
#  Synopsis:
#	Eat a stream of blobs passed on command line.
#  Exit Status:
#	0	all blob request to eat suceeded, both existing or not
#	1	request to eat a blob failed, some blobs may not be digested
#  Environment:
#	BLOBIO_SERVICE
#	BLOBIO_GET_SERVICE
#  Usage:
#	bio-eat <large.udig
#	bio-eat sha:7884029948e18cb1f5d442a46b7721d0178ccc39 ...
#	xargs bio-eat <large.udig
#  Note:
#	Zap the reads from standard input.  xargs is better approach.
#
#	Think about a script called bio-digest which eats a local file.
#
PROG=$(basename $0)

die()
{
	echo "$PROG: ERROR: $@" >&2
	exit 1
}

test -n "$BLOBIO_SERVICE" || die 'env variable not defined: BLOBIO_SERVICE'
SERVICE=${BLOBIO_GET_SERVICE:=$BLOBIO_SERVICE}

bio_eat()
{
	UDIG="$1"

	blobio eat --udig $UDIG --service $SERVICE
	STATUS=$?
	case $STATUS in
	0)
		echo "@$UDIG"
		;;
	1)
		echo "?$UDIG"
		;;
	*)
		die "blobio eat $SERVICE $UDIG failed: exit status=$STATUS: "
		;;
	esac
}

case $# in
0)
	while read LINE;  do
		bio_eat "$LINE"
	done
	;;
*)
	#
	#  Read blobs from the command line.
	#
	while [ "$1" ]; do
		bio_eat "$1"
		shift
	done
	;;
esac
