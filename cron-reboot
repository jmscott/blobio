#!/bin/bash
#
#  Synopsis:
#	Cron script to fully reboot all blob process @reboot cron schedule
#  Usage:
#	#  in crontab
#	BLOBIO_ROOT=/usr/local/blobio
#	LOG=$BLOBIO_ROOT/log/cron-reboot.log
#
#	@reboot $BLOBIO_ROOTsbin/cron-reboot >>$LOG 2>&1
#
#	cron-reboot --no-zap-flowd	#  do not zap bio4/flowd processes
#  Note:
#	inexact zapping of flowd process by zap-proc when the file
#	run/flowd.pid is missing.
#

PROG=$(basename $0)
USER=$(id -un)
FLOWD_PAUSE=4
PKILL_PAUSE=4
NO_ZAP_FLOWD=no

log()
{
	echo "$(date +'%Y/%m/%d %H:%M:%S'): $PROG#$$: $@"
}

die()
{
	log "ERROR: $@" >&2
	exit 1
}

leave()
{
	log 'good bye, cruel world'
}

log 'hello, world'
trap leave EXIT

test -n "$BLOBIO_ROOT" || die "environment variable not defined: BLOBIO_ROOT"
log "BLOBIO_ROOT=$BLOBIO_ROOT"

case $# in
0)
	;;
1)
	test "$1" = '--no-zap-flowd' || die "unknown argument: $1"
	NO_ZAP_FLOWD=yes
	;;
*)
	die "wrong argument count: got $#, expected 0 or 1"
	;;
esac

cd $BLOBIO_ROOT || die "cd $BLOBIO_ROOT failed"
. etc/profile

log "no zap flowd: $NO_ZAP_FLOWD"

test $NO_ZAP_FLOWD = no && zap-proc run/flowd.pid
if [ $USER = blobio ];  then
	log 'user is blobio, so process controled by launchd or systemd'
	zap-proc run/bio4d.pid biod4d-listen
	log 'pausing 3 seconds while system restarts process'
	sleep 3
	run-stat-report
	exit
fi

log 'calling bio4d_ctl restart ...'
bio4d_ctl restart || die "bio4d_ctl restart failed: exit status=$?"
log 'bio4d_ctl restart ok'

log 'starting flowd server in background ...'
flowd server etc/blobio.flow &
log "pausing $FLOWD_PAUSE sec while flowd starts ..."
sleep $FLOWD_PAUSE
test -e run/flowd.pid || die "flowd failed to start in background"
log "flowd pid: $(cat run/flowd.pid)"

log 'reboot sync flowd processes'
test $NO_ZAP_FLOWD = yes && (
	reboot-sync || die "reboot-sync failed: exit status=$?"
)

run-stat-report
