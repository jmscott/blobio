#!/bin/bash
#
#  Synospsis:
#	Report of running bio4d & flowd processes.
#  Usage:
#	run-stat-report
#  See:
#	/usr/local/jmscottsbin/run-stat
#	https://github.com/jmscott/work
#  Exit Status:
#	0	ok
#	1	error
#  Note:
#	On gnu/linux sort is ignoring the second key.  The pain never ends.
#
#	Rename this script to run-pid-report?
#
NOW=$(date +'%s')

die()
{
	echo "$(basename $0): ERROR: $@" >&2
	exit 1
}

test $# = 0 || die "wrong number of arguments: got $#, expected 0"
test -n "$BLOBIO_ROOT" || die 'env not defined: BLOBIO_ROOT'
cd $BLOBIO_ROOT || die "cd BLOBIO_ROOT failed: exit status=$?"

(
	cat <<END
Process	Status	Up Time	Request, Sucess, Fail	Recent 10s Sample	When
-------	------	-------	---------------------	-----------------	----
END
	run-stat-tuple							|
		sort --key=2 --key=1 --field-separator=$'\t'		|
		while read PROC STATUS START_EPOCH			\
		           FDR OK FLT 					\
		           sFDR sOK sFLT				\
			   ;  do
			SP=run/$PROC.stat
			case $PROC in
			bio4d|flowd)
				SP=run/$PROC.stat
				;;
			flowd/*)
				HOST=$(echo $PROC | sed 's/......//')
				SP="sync/root/$HOST/run/flowd.stat"
				;;
			*)
				die "unknown process: $PROC"
				;;
			esac

			if [ -e $SP ];  then
				AGO="$(duration-english $(
					duration-mtime $SP
				))"
			else
				if [ "$STATUS" = UP ];  then
					AGO='!!!'
				else
					AGO=n/a
				fi
			fi
					
			case "$START_EPOCH" in
			[0-9]*)
				DURATION=$(duration-english $(
					expr $NOW - $START_EPOCH
				))
				;;
			UNKNOWN)
				DURATION=UNKNOWN
				;;
			esac
			PROC=$(echo $PROC | sed 's/\//>/')
			cat <<END
$PROC	$STATUS	$DURATION	$FDR,$OK,$FLT	$sFDR,$sOK,$sFLT	$AGO
END
		done
		
)									|
	sed 's/,,/?/g'							|
	column -s '	' -t						|
	sed 's/ *	//'
