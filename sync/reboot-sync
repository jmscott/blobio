#!/bin/bash
#
#  Synopsis:
#	Manual reboot of flowd for sync proceses in $BLOBIO_ROOT/sync/host/*
#  Usage:
#	#  Standalone
#	export BLOBIO_ROOT=/usr/local/blobio
#	reboot-sync
#
#	#  Called from cron-reboot
#	reboot-sync
#  Note:
#	No safety value check for user blobio, which typically is controlled
#	by systemd or launchctl.
#
PROG=$(basename $0)
PKILL_USER=$(id -un)

log()
{
	echo "$(date +'%Y/%m/%d %H:%M:%S'): $PROG: $@"
}

die()
{
	log "ERROR: $@" >&2
	exit 1
}

test $# = 0 || die 'wrong number of arguments'

log 'hello, world'
trap 'log good bye, cruel world' EXIT

log "BLOBIO_ROOT=$BLOBIO_ROOT"

cd $BLOBIO_ROOT || die "cd $BLOBIO_ROOT failed: exit status=$?"

logh()
{
	log "$HOST: $@"
}

dieh()
{
	die "$HOST: $@"
}

find $BLOBIO_ROOT/sync/host/ -mindepth 1 -maxdepth 1 -type d 		|
  while read SYNC_ROOT;  do
	HOST=$(basename $SYNC_ROOT)
	log "sync host: $HOST"
	cd $SYNC_ROOT || dieh "cd $SYNC_ROOT failed: exit status=$?"
	FLOW=etc/sync-$HOST.flow

	if [ ! -e $FLOW ];  then
		logh "WARN (ok): no config for flowd: $FLOW"
		continue
	fi

	#  attempt to zap lingering flowd
	if [ -r run/flowd.pid ];  then
		PID=$(head -1 run/flowd.pid)
		logh "run/flowd.pid exists: #$PID"
		kill $PID
		rm -f run/flowd.*
	fi

	log "starting sync flowd server: $HOST ..."
	log "BLOBIO_ROOT for sync flowd: $SYNC_ROOT"
	BLOBIO_ROOT=$SYNC_ROOT flowd server etc/sync-$HOST.flow &
	FLOWD_PID=$!
	log "flowd process id: $FLOWD_PID"
done
