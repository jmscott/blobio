#!/usr/bin/env bash
#
#  Synopsis:
#	Symmetric difference between the file system and service view.
#  Usage:
#	fs-xor-service >fs-xor-service.out
#
#	#  list udigs in both xor'ed sets
#	grep ': [<>] [a-z]' fs-xor-service.out
#

START_TIME=$(date +%s)
PROG=$(basename $0)

declare  -i fs_count=0
declare  -i service_count=0
shopt -s lastpipe

#
#  Force sort command to honor case.
#
export LC_COLLATE=C

log()
{
	echo "$(date +'%Y/%m/%d %H:%M:%S'): $@"
}

die()
{
	log "ERROR: $@" >&2
	exit 1
}

leave()
{
	DURATION=$(expr $(date +%s) - $START_TIME)
	log "good bye, cruel world: $(duration-english $DURATION) elapsed"
}

test $# = 0 || die "wrong number of cli args: got $#, need 0"

log hello, world
trap leave EXIT INT QUIT TERM

test -n "$BLOBIO_ROOT" || die 'BLOBIO_ROOT env variable not defined'
log "BLOBIO_ROOT=$BLOBIO_ROOT"
cd $BLOBIO_ROOT || die "cd $BLOBIO_ROOT failed"

test -r etc/profile && . etc/profile

log "BLOBIO_SERVICE=$BLOBIO_SERVICE"
log "PGHOST=$PGHOST"
log "PGPORT=$PGPORT"
log "PGUSER=$PGUSER"
log "PGDATABASE=$PGDATABASE"

log "PATH=$PATH"

log "starting scan of $(pwd)/data/ ..."
comm -3 <(fs2udig | sort) <(ls-service)					|
	sed 's/^\t/> /' 						|
	sed 's/^\([^>]\)/< \1/'						|
	while read LINE;  do
		case "$LINE" in
		*[\>]*)
			fs_count=$(($fs_count + 1))
			;;
		*[\<]*)
			service_count=$(($service_count + 1))
			;;
		*)
			die "can not match: $LINE"
			;;
		esac
		log $LINE
	done
STATUS=${PIPESTATUS[*]}
test "$STATUS" = '0 0 0 0' || die "comm fs/service failed: exit status=$STATUS"

log 'file system in column <, service in column >'
log "fs udig count: $fs_count"
log "service udig count: $service_count"
