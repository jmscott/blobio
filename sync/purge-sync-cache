#!/bin/bash
#
#  Synopsis:
#	Purge cached files and directories for a synced remote service.
#  Usage:
#	purge-sync-cache <stale-days> <sync-root-name>
#	purge-sync-cache 7 condor.setspace.com
#

info()
{
	echo "$(date +'%Y/%m/%d %H:%M:%S'): $@"
}

die()
{
	info "ERROR: $@" >&2
	exit 1
}

test $# = 2 || die "wrong number of arguments: got $#, expected 2"

info 'hello, world'
trap 'info good bye, cruel world' EXIT

test -n "$BLOBIO_ROOT" || die 'environment not defined: BLOBIO_ROOT'
info "BLOBIO_ROOT: $BLOBIO_ROOT"

case "$1" in
[1-9]*)
	STALE_DAYS=$1
	;;
*)
	die "unknown stale days: $1"
	;;
esac
info "stale days: $STALE_DAYS days"

SYNC_ROOT="$2"
info "sync root: $SYNC_ROOT"
SYNC_ROOT=$BLOBIO_ROOT/sync/root/$SYNC_ROOT
info "sync root path: $SYNC_ROOT"
cd $SYNC_ROOT || die "cd $SYNC_ROOT failed: exit status=$?"

if [ ! -e cache/exists ];  then
	info "WARN: dir cache/exists does not exist, so nothing to do"
	exit 0
fi

info "purging files and empty dirs in cache/exists/: $STALE_DAYS days ..."

find cache/exists							\
	-mindepth 1							\
	-depth								\
	\(								\
		\( -type f -a -atime +$STALE_DAYS \)			\
		-o							\
		\( -type d -a -empty \)					\
	\)								\
	-print								\
	-delete
test $? = 0 || die "find cache/exists/ -delete failed: exit status=$?"

info 'counting files in dir cache/exists/ ...'
C=$(find cache/exists -type f | wc -l | awk '{print $1}')
case "$C" in
[0-9]*)
	info "cache/exist/: $C files"
	;;
*)
	die "find cache/exists | wc -l failed"
	;;
esac

exit 0
